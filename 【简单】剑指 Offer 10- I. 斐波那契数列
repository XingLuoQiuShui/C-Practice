写一个函数，输入 n ，求斐波那契（Fibonacci）数列的第 n 项（即 F(N)）。斐波那契数列的定义如下：

F(0) = 0,   F(1) = 1
F(N) = F(N - 1) + F(N - 2), 其中 N > 1.

斐波那契数列由 0 和 1 开始，之后的斐波那契数就是由之前的两数相加而得出。
答案需要取模 1e9+7（1000000007），如计算初始结果为：1000000008，请返回 1。

其实没太搞懂
class Solution {
public:
    int fib(int n) {
        int i;
        int F[101];
        F[0] = 0;
        F[1] = 1;
        for(i=2; i<=100; i++)
        {
            F[i] = F[i-1] + F[i-2];       //执行出错
            //Line 10: Char 28: runtime error: signed integer overflow: 1836311903 + 1134903170 cannot be represented in type 'int' (solution.cpp)
            //SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior prog_joined.cpp:20:28
            F[i] = (F[i-1] + F[i-2]) %1000000007;    //没明白为什么加上取模就通过了 好像是【如果保存原数据，long不够装，double会丧失精度】【题目要求，防止溢出的，方便后台判断结果】
        }
        return F[n];
    }
};
